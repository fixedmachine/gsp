/**
 * Gemius Stream integration for projekktor player
 * @author Radosław Włodkowski
 * @version 2.5.0
 * @date 2017-03-28
 * @license: MIT
 */
!function(n){if(!window.gsp){var o,e="",t="//pro.hit.gemius.pl/gstream.js",a=function(){var i={dataType:"script",cache:!0,url:t,success:r,error:c};return s("log","_loadGS","gemiusStream library loading from: "+t),n.ajax(i)},r=function(){var i=1,e=function(){window.gemiusStream?(o=window.gemiusStream,s("log","_onLoadGSSuccess","gemiusStream loaded."),g()):i<=4?(window.setTimeout(e,200),s("log","_onLoadGSSuccess","Waiting for gemiusStream to appear in global scope. "+i+" retry out of 4"),i++):s("error","_onLoadGSSuccess","gemiusStream can't be found in global scope.")};e()},c=function(i,e,n){s("error","_onLoadGSError","Error loading Gemius Stream script. Error: "+e+" | "+n)},g=function(){window.gSmConfig?(window.gSmConfig=n.extend({},window.gSmConfig,l.configConst),s("log","_applyConfigConstants","gSmConfig config applied: ",window.gSmConfig)):s("warn","_applyConfigConstants","gSmConfig can't be found in global scope.")},f=function(i,e){l.streamInitialized()?(o.event(l.config.playerId,l.config.materialIdentifier,e,i),s("log","_sendGSEvent",i+" event sent in "+e+" second of the stream for player [id: "+l.config.playerId+"]")):s("log","_sendGSEvent",i+" event noticed but there are no active streams for current player [id: "+l.config.playerId+"]")},s=function(i,e,n){var o="["+e+"]",t=Array.prototype.slice.call(arguments,3);if(l.debug&&window.console){switch(i){case"log":case"warn":case"error":break;default:i="log"}window.console[i].apply(this,["[gsp]->"+o+" "+n].concat(t))}},l={defaultConfigConst:{},defaultConfig:{IDENTIFIER:"",HITCOLLECTOR:"",playerId:"player_"+Math.round(1e6*Math.random()),materialIdentifier:"",totalTime:0,treeId:[],additionalPackage:[],customPackage:[{name:"Title",value:""},{name:"SeriesTitle",value:""},{name:"Vortal",value:""},{name:"Subcategory1",value:""},{name:"Duration",value:"live"},{name:"Type",value:"stream"}]},config:{},configConst:{},debug:!1,checkConfig:function(i){"string"!=typeof this.config.materialIdentifier&&(i&&(this.config.materialIdentifier=this.config.materialIdentifier.toString()),s("log","checkConfig","config.materialIdentifier was not a string"))},streamInitialized:function(){return!!o.playersArray.length},init:function(i,e){window.gemiusStream?o=window.gemiusStream:a(),this.config=n.extend({},this.defaultConfig,this.config,i),this.configConst=n.extend({},this.defaultConfigConst,this.configConst,e),this.checkConfig(!0),s("log","init","gsp successfully initialized with config: ",this.config,this.configConst)},setTotalTime:function(i){var e,n;l.config.totalTime=i,l.config.customPackage[4]={name:"Duration",value:(e=i,n="",(void 0===e||"live"===e)&&(n="live"),0<=e&&e<=599&&(n="0-9:59"),600<=e&&e<=1199&&(n="10:00-19:59"),1200<=e&&e<=1799&&(n="20:00-29:59"),1800<=e&&e<=2399&&(n="30:00-39:59"),2400<=e&&(n="40:00+"),n)}},newStream:function(i){e!==i&&(o.newStream(this.config.playerId,this.config.materialIdentifier,this.config.totalTime,this.config.customPackage,this.config.additionalPackage,this.config.IDENTIFIER,this.config.HITCOLLECTOR,this.config.treeId),s("log","newStream","new stream opened for player [id: "+l.config.playerId+"] with config: ",this.config),e=i)},closeStream:function(i){o.closeStream(this.config.playerId,this.config.materialIdentifier,i)},onPlay:function(i){f("playing",i)},onPause:function(i){f("paused",i)},onStop:function(i){f("stopped",i)},onBuffering:function(i){f("buffering",i)},onSeekingStarted:function(i){f("seekingStarted",i)},onComplete:function(i){f("complete",i)}};n.extend(l.config,l.defaultConfig),window.gsp=l}}(jQuery);
//# sourceMappingURL=gsp.min.js.map
